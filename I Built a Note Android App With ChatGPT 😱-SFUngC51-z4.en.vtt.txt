 is one of the most trending topics in  the tech world right now you'll see tons  of examples built the whole internet way  just generates entire code sections you  can use in your projects and it even  gives you explanations for these and I  was asking myself can this take over the  job of a developer and can we really  build a functional app just by using  chargpt so I took the challenge of  building a whole node app with a search  function for Android just by using the  new AI something that's normally closed  and possible for someone who is not an  Android developer and you will be  surprised about the results for this  video you will learn how good the code  is that chat should be generated  evaluated by an experienced Android  developer and at which thinks it's  simply not good for this challenge there  are only three rules rule number one for  this challenge I'm not allowed to write  any logic or code by myself rule number  two I am allowed to paste code chatgbt  generated partly or as a whole so I'm  really only allowed to ask the questions  and take the code it gives me and paste  it into Android Studio to build the app  and rule number three I'm also allowed  to delete code GPT generator before  starting with this I knew the challenge  wouldn't line actually getting good code  Parts but getting parts that work  together and make functional apps so I  started thinking about how I could  approach this one thing you need to keep  in mind is that the data set of chatgpt  is based on material from 2021 which is  why we can't use the latest Android  Technologies like its modern UI  framework jetpack compose therefore I  decided to stick to the old school  approach and build the UI using XML and  before asking Church BT about generating  the first layout file I have to think  about if I want to use activities or  fragments for this while in a real  Android app it would be a no-brainer for  me to use fragments for every single  screen I thought this would make things  more complex when it comes to navigation  so I went with the safer approach of  actually using two activities one for  the node list screen and one for the  node detail screen I knew that I could  start generating the code so I asked  judge EBT very detailed about generating  an initial layout and basic code for our  main activity and it actually gave me  something that looked very similar to  what I asked for it needed some  adjustments but then it looked like what  I wanted I just got a whole screen  layout from an AI which is super cool  however looking at the main activity  code we noticed that chatgpt was trained  on an older data set since it included  cotton synthetics which is a completely  outdated approach to getting  v-references before adding functionality  to our node list screen I thought it's  actually smart to let Chachi BT know  about our node detail screen first so I  went ahead and generated a no detail  activity and the generated layout for  the no detail activity looked really  good usually I'd use something like  Floating Action buttons for adding and  saving a node however for that I would  have needed icon resources which Chachi  BT couldn't give me so I just created  the plain button it's not a beautiful  but functional design I also forgot a  button on our nodeless screen to get to  the node detail screen to add a node so  I quickly asked it to adjust the layout  and it did exactly what I wanted it also  perfectly generated the code to navigate  through the node detail activity after  clicking that button to generate the  database I had to tell jgbt exactly what  a note is and how I want to interact  with the database and what I thought  will be one of the hardest parts turn  out to be one of the easiest ones it  generated the whole database schema  including a Dao a Singleton and a  nautilus view model to interact with it  however at this point I didn't yet know  about all the challenges this will bring  later one thing that looked a bit weird  to me was the view model it generated it  created its own curtain scope to execute  all the Dao's functions on the i o  thread something that wouldn't be  necessary if the Dow function would have  been suspend functions this seemed a bit  round to me but I took it since it's  technically code that works another  thing that I would do differently in an  app is that I would avoid using the  application context in the view model  like here so I would avoid using Android  view model while this will not cause any  memory leaks it will actually make your  view model not locally unit testable so  you would have to make them instrumented  tests and run them on an actual emulator  which is slower in our example passing  the application context is of course  necessary since I advise chbt to  initialize our database directly in the  view model to avoid needing to set up  some kind of dependency injection  mechanism and I know that many beginners  actually follow this practice of using  Android view model since they might not  be as familiar with unit testing as an  experience and their developer is  however since there seems to be so much  content around Android remodel online it  seems that chpt actually learned from  that which is not good in this case next  I needed the Gradle dependencies for  room which it quickly gave me I also  decided to use this pen functions for  all functions in our no doubt since I  thought it'll be easier to interact with  it that way especially when it comes to  searching for notes and then it also  adjusted our view model with suspend  functions as you can see here this is  another mistake Chaturbate did here you  should never expose this pen functions  in a view model since that will require  you to launch a curtain and lifecycle  scope in your UI to execute these  functions from a viewmodel which means  they will be canceled if the UI is  actually destroyed for example after  screen rotation therefore always  executes his pen functions in a view  model using viewmodel scope and launch a  new coroutine that way since view model  scope will outlive the life cycle of an  activity or fragment but like a leech  hbt quickly did that change when I asked  for it however after asking it for the  dependency I need for view model scope  it just spit out a lot of trash that did  not work after asking several times I  asked the question as if I had an error  and it finally gave me the correct  dependence next I asked her to generate  an XML layout for the node items  including a recyclerview adapter for it  using diffutil diffutil is used to  calculate the differences between two  lists and only update those items that  changed which is very efficient and then  something weird happened Chachi BT  stopped respawning because of its  character limit but when I asked it to  continue it gave me a completely  different XML file together with a  completely different adapter do you  notice how it uses two different  approaches for diffutil here I like the  second code model and asks you to  generate the code for main activity and  surprisingly it gave me all the code I  wanted even with a swipe to dismiss  callback so that we can swipe our nose  to the left to delete them I took all  the code and pasted it in my activity  but jbt used the way to access an item  in the recycler view that did not work I  knew how it would work but I had to get  it to respond with that since I'm not  allowed to write code on my own I asked  for that again and again but that seemed  to have completely messed up jgbt it  responded with new implementations of  adapters that it has not responded with  first and the only way I could get it to  use the correct approach is to be really  really exact with my wording did this  now mess up the whole process since  Chachi Beauty does not know which  adapter I'm referring to anymore I  decided to keep going and got the code  to navigate to the no details screen  after clicking an item time to create a  no detailed view model which should be  capable of loading a single node by its  ID and saving a node in our database it  again needed some restructuring but then  gave me something usable including a  factory for the view model which is  needed if we want to pass our own  parameters to its Constructor I then  thought I needed a way to update the  node locally in our review model without  updating it in the database whenever our  text changed after some tries Chachi PT  gave me what I wanted then the project  included everything I thought would be  needed to run over app I only needed to  add one more dependency to use room with  Co routines so now it's finally time to  run the app and we got a Gradle error  after asking chechibiti about it it did  not give me an answer that worked I  ended up removing an invalid dependency  jgbt gave me earlier and after fixing  another little issue the project finally  compiled so do we now have a working  node app generated by AI when clicking  on add the app is properly navigating to  the node details screen let's enter a  title and content and hit save and  nothing happens the node is not in our  database for me it was clear that I  didn't get this far just to give up I  will keep trying to have a functional  app one bug was that there was no  initial node created in the node detail  view model when clicking on apps I fixed  it and relaunched the app this time I  got an application not responding error  after clicking add and I had absolutely  no idea why after getting a good night  of sleep I found out what the issue was  the listeners for when the text changes  ran into an infinite Loop which  completely blocked the UI from updating  I realized these listeners aren't even  necessary so I simply remove them I also  fixed another issue that room used -1 as  the ID for new nodes instead of  generating a new one and after adding a  call to show all nodes when the search  field is empty the app was finally  working I ended up changing the layout  for notes to make it a bit more  beautiful and then adding new notes root  like a charm searching for notes was  working as well and even the leading  existing notes by swiping minimum wave  was working perfectly fine and yes it  was even surviving screen rotations  which is often a pain to deal with an  Android so I really managed to build a  functional app by not typing a single  character on my own what do we learn  from this well I think that Chachi PT is  a very impressive technology I would  have never been able to build this app  without having experience as an Android  developer sometimes I had to be super  specific with my questions and tell it  exactly what I needed just so that it  spit out that code building such a  product without AI would have maybe cost  me an hour with Chachi PT it took me  almost four times as long so in the end  chatgpt is a great tool that can help  you find solutions to your errors  similar to Google but you still have to  know how to exactly phrase your  questions and to phrase them that  exactly you have to be a developer and  know all the technical terms and apis  otherwise you can forget being able to  let AIS create fully functional apps for  you at least in 2023 so what do you  think will the new generations of AI  allow non-developers to build software  or will there always be a market for us  and AI will remain a tool just like  Google let us know that down below